📁 editora.ts
export interface Editora {
  codEditora: number;
  nome: string;
}


📁 livro.ts
export interface Livro {
  codigo: number;
  titulo: string;
  resumo: string;
  autores: string[];
  codEditora: number;
}


________________


📁 controle-editora.service.ts
import { Injectable } from '@angular/core';
import { Editora } from './editora'; // ajuste o caminho se necessário


@Injectable({
  providedIn: 'root'
})
export class ControleEditoraService {
  private editoras: Editora[] = [
    { codEditora: 1, nome: 'Editora Abril' },
    { codEditora: 2, nome: 'Companhia das Letras' },
    { codEditora: 3, nome: 'Saraiva' }
  ];


  constructor() {}


  getEditoras(): Editora[] {
    return this.editoras;
  }


  getNomeEditora(codEditora: number): string | undefined {
    const editora = this.editoras.find(e => e.codEditora === codEditora);
    return editora?.nome;
  }
}


________________


📁 controle-livros.service.ts
import { Injectable } from '@angular/core';
import { Livro } from './livro'; // ajuste o caminho se necessário


@Injectable({
  providedIn: 'root'
})
export class ControleLivrosService {
  private livros: Livro[] = [
    {
      codigo: 1,
      titulo: 'Dom Casmurro',
      resumo: 'Um clássico da literatura brasileira.',
      autores: ['Machado de Assis'],
      codEditora: 2
    }
  ];


  constructor() {}


  getLivros(): Livro[] {
    return this.livros;
  }


  incluirLivro(novoLivro: Livro): void {
    this.livros.push(novoLivro);
  }


  excluirLivro(codigo: number): void {
    this.livros = this.livros.filter(livro => livro.codigo !== codigo);
  }
}


________________